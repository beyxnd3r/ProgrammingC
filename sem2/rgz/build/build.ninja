# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.29

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: TriangleProject
# Configurations: 
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5

# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = C$:/Prog/rgz/build/
# =============================================================================
# Object build statements for STATIC_LIBRARY target triangle


#############################################
# Order-only phony target for triangle

build cmake_object_order_depends_target_triangle: phony || .

build CMakeFiles/triangle.dir/triangle.c.obj: C_COMPILER__triangle_unscanned_ C$:/Prog/rgz/triangle.c || cmake_object_order_depends_target_triangle
  DEP_FILE = CMakeFiles\triangle.dir\triangle.c.obj.d
  FLAGS = -std=gnu99
  OBJECT_DIR = CMakeFiles\triangle.dir
  OBJECT_FILE_DIR = CMakeFiles\triangle.dir


# =============================================================================
# Link build statements for STATIC_LIBRARY target triangle


#############################################
# Link the static library libtriangle.a

build libtriangle.a: C_STATIC_LIBRARY_LINKER__triangle_ CMakeFiles/triangle.dir/triangle.c.obj
  OBJECT_DIR = CMakeFiles\triangle.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = libtriangle.a
  TARGET_PDB = triangle.a.dbg

# =============================================================================
# Object build statements for EXECUTABLE target Triangle


#############################################
# Order-only phony target for Triangle

build cmake_object_order_depends_target_Triangle: phony || cmake_object_order_depends_target_triangle

build CMakeFiles/Triangle.dir/main.c.obj: C_COMPILER__Triangle_unscanned_ C$:/Prog/rgz/main.c || cmake_object_order_depends_target_Triangle
  DEP_FILE = CMakeFiles\Triangle.dir\main.c.obj.d
  FLAGS = -std=gnu99
  OBJECT_DIR = CMakeFiles\Triangle.dir
  OBJECT_FILE_DIR = CMakeFiles\Triangle.dir


# =============================================================================
# Link build statements for EXECUTABLE target Triangle


#############################################
# Link the executable Triangle.exe

build Triangle.exe: C_EXECUTABLE_LINKER__Triangle_ CMakeFiles/Triangle.dir/main.c.obj | libtriangle.a || libtriangle.a
  LINK_LIBRARIES = libtriangle.a  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\Triangle.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = Triangle.exe
  TARGET_IMPLIB = libTriangle.dll.a
  TARGET_PDB = Triangle.exe.dbg

# =============================================================================
# Object build statements for EXECUTABLE target test_triangle


#############################################
# Order-only phony target for test_triangle

build cmake_object_order_depends_target_test_triangle: phony || cmake_object_order_depends_target_triangle

build CMakeFiles/test_triangle.dir/test_triangle.c.obj: C_COMPILER__test_triangle_unscanned_ C$:/Prog/rgz/test_triangle.c || cmake_object_order_depends_target_test_triangle
  DEP_FILE = CMakeFiles\test_triangle.dir\test_triangle.c.obj.d
  FLAGS = -std=gnu99
  OBJECT_DIR = CMakeFiles\test_triangle.dir
  OBJECT_FILE_DIR = CMakeFiles\test_triangle.dir


# =============================================================================
# Link build statements for EXECUTABLE target test_triangle


#############################################
# Link the executable test_triangle.exe

build test_triangle.exe: C_EXECUTABLE_LINKER__test_triangle_ CMakeFiles/test_triangle.dir/test_triangle.c.obj | libtriangle.a || libtriangle.a
  LINK_LIBRARIES = libtriangle.a  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\test_triangle.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = test_triangle.exe
  TARGET_IMPLIB = libtest_triangle.dll.a
  TARGET_PDB = test_triangle.exe.dbg


#############################################
# Utility command for test

build CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Prog\rgz\build && C:\Strawberry\c\bin\ctest.exe --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build test: phony CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Prog\rgz\build && C:\Strawberry\c\bin\cmake.exe -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Prog\rgz\build && C:\Strawberry\c\bin\cmake.exe --regenerate-during-build -SC:\Prog\rgz -BC:\Prog\rgz\build"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

build Triangle: phony Triangle.exe

build test_triangle: phony test_triangle.exe

build triangle: phony libtriangle.a

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: C:/Prog/rgz/build

build all: phony libtriangle.a Triangle.exe test_triangle.exe

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | C$:/Prog/rgz/CMakeLists.txt C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeCInformation.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeGenericSystem.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeRCInformation.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Compiler/GNU-C.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Compiler/GNU.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-GNU-C.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-GNU.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-Initialize.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-windres.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.29.2/CMakeCCompiler.cmake CMakeFiles/3.29.2/CMakeRCCompiler.cmake CMakeFiles/3.29.2/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build C$:/Prog/rgz/CMakeLists.txt C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeCInformation.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeGenericSystem.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeRCInformation.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Compiler/GNU-C.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Compiler/GNU.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-GNU-C.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-GNU.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-Initialize.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows-windres.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/Windows.cmake C$:/Strawberry/c/share/cmake-3.29/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.29.2/CMakeCCompiler.cmake CMakeFiles/3.29.2/CMakeRCCompiler.cmake CMakeFiles/3.29.2/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
